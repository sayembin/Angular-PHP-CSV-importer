<?php

require_once __DIR__.'/../../controller/CSVImport.php';
use controller\CSVImport as CSVImport;
/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-28 at 18:18:48.
 */
class CSVImportTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var CSVImport
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new CSVImport('/home/sayem/Desktop/data.csv');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    /**
     * @test 
     */
    public function testFilePath(){
        $csvimp = $this->createMock('controller\CSVImport');
        $csvimp->expects($this->any())->method('getFilePath')->willReturn('/home/sayem/Desktop/data.csv');
        $this->assertFileExists($csvimp->getFilePath());
        $this->assertFileEquals('/home/sayem/Desktop/data.csv', $csvimp->getFilePath(),'not worked ');
    }
     /**
     * @test 
     */
    public function getCSVDataReturnArray(){
       $return = is_array($this->object->importDataFromFile());
       $this->assertEquals(1,$return);
       $this->assertArraySubset($this->getCsvData(), $this->object->importDataFromFile());
    }
    
    /**
     * @dataProvider getCsvData
     */
    public function getCsvData(){
        return [1 => array('Zentrale','06402/5200-215','hungen@muehl.de')];
    }
    /**
     * @test
     */
    public function isReturnJSON(){
        $this->assertArraySubset($this->getCsvData(), json_decode($this->object->getCSVData()));
    }
}
